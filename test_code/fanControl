// Pin connected to the transistor base
const int FAN_PIN = 3;  

void setup() {
  // Set fan control pin as output
  pinMode(FAN_PIN, OUTPUT);
  // Initialize serial communication
  Serial.begin(9600);
  Serial.println("Fan Control System Ready");
}

void loop() {
  // For testing - this would be integrated with your mission code later
  testFanControl();
}

// Function to turn fans on at specified speed (0-255)
void fanOn(int speed) {
  analogWrite(FAN_PIN, speed);
  Serial.print("Fans ON at speed: ");
  Serial.println(speed);
}

// Function to turn fans off
void fanOff() {
  analogWrite(FAN_PIN, 0);
  Serial.println("Fans OFF");
}

// Function to gradually increase fan speed
void fadeInFan() {
  Serial.println("Fading fans in...");
  for (int i = 0; i <= 255; i++) {
    analogWrite(FAN_PIN, i);
    delay(10);
  }
}

// Function to gradually decrease fan speed
void fadeOutFan() {
  Serial.println("Fading fans out...");
  for (int i = 255; i >= 0; i--) {
    analogWrite(FAN_PIN, i);
    delay(10);
  }
}

// Test function to demonstrate fan control
void testFanControl() {
  // Full speed
  fanOn(255);
  delay(3000);
  
  // Off
  fanOff();
  delay(1000);
  
  // Gradually speed up
  fadeInFan();
  delay(2000);
  
  // Gradually slow down
  fadeOutFan();
  delay(1000);
}


// for main code
// bool isNearCandles = false;

// In your mission control code, when approaching candles:
// if (isNearCandles) {
  // fanOn(255);  // Full power for fire suppression
// } else {
  // fanOff();    // Save power when not near candles
// }
